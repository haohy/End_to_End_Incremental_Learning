!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BenchMark	models/benchmark.py	/^class BenchMark(nn.Module):$/;"	c
Config	config.py	/^class Config():$/;"	c
Conv1d	models/benchmark.py	/^def Conv1d(in_channels, out_channels, kernel_size, stride=1, padding=0, activation=None, p=0., bias=True):$/;"	f
DataPool	data/data_pool.py	/^class DataPool():$/;"	c
Linear	models/benchmark.py	/^def Linear(input_size, output_size, activation=None, p=0., bias=True):$/;"	f
Linear	models/representer.py	/^def Linear(input_size, output_size, activation=None, p=0., bias=True):$/;"	f
RawDataset	data/dataset.py	/^class RawDataset(data.Dataset):$/;"	c
__getitem__	data/dataset.py	/^    def __getitem__(self, index):$/;"	m	class:RawDataset	file:
__init__	data/data_pool.py	/^    def __init__(self, dir_data, cap, dataname):$/;"	m	class:DataPool
__init__	data/dataset.py	/^    def __init__(self, dir_data, dataname, task, classes):$/;"	m	class:RawDataset
__init__	models/benchmark.py	/^    def __init__(self, input_size, output_size, channels_list=[16,32,64], kernel_size_list=[3,3,3], strides=[2,2,2], activation='relu'):$/;"	m	class:BenchMark
__len__	data/dataset.py	/^    def __len__(self):$/;"	m	class:RawDataset	file:
acc_cal	models/representer.py	/^def acc_cal(model, test_dataloader):$/;"	f
add_data	data/data_pool.py	/^    def add_data(self, model, new_data, num_everyclass, device):$/;"	m	class:DataPool
adjust_data_pool	data/data_pool.py	/^def adjust_data_pool(data_pool_dict, num_everyclass):$/;"	f
adjust_lr	utils/tools.py	/^def adjust_lr(optimizer, lr, epoch):$/;"	f
batch_size	config.py	/^    batch_size = 16$/;"	v	class:Config
benchmark	models/benchmark.py	/^    benchmark = BenchMark(100, 2)$/;"	v	class:BenchMark
cap	config.py	/^    cap = 10000$/;"	v	class:Config
classes	data/dataset.py	/^    classes = ['1', '2']$/;"	v
compute_dim	models/benchmark.py	/^def compute_dim(input_size, channels_list, kernel_size_list, strides):$/;"	f
concat_datasets	data/dataset.py	/^def concat_datasets(datasets_list):$/;"	f
config	config.py	/^config = Config()$/;"	v
dataname	config.py	/^    dataname = 'Crop'$/;"	v	class:Config
dataname	data/dataset.py	/^    dataname = 'Crop'$/;"	v
dataname	utils/tools.py	/^    dataname = 'Crop'$/;"	v
dataset	data/dataset.py	/^    dataset = RawDataset(dir_data, dataname, task, classes)$/;"	v
device	config.py	/^    device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')$/;"	v	class:Config
dir_data	config.py	/^    dir_data = "\/disk1\/haohy\/data\/UCRArchive_2018"$/;"	v	class:Config
dir_data	data/dataset.py	/^    dir_data = "\/disk1\/haohy\/data\/UCRArchive_2018"$/;"	v
dir_data	utils/tools.py	/^    dir_data = "\/disk1\/haohy\/data\/UCRArchive_2018"$/;"	v
dir_path	data/__init__.py	/^dir_path = os.path.dirname(os.path.realpath(__file__))$/;"	v
dir_path	models/__init__.py	/^dir_path = os.path.dirname(os.path.realpath(__file__))$/;"	v
dir_path	utils/__init__.py	/^dir_path = os.path.dirname(os.path.realpath(__file__))$/;"	v
forward	models/benchmark.py	/^    def forward(self, x):$/;"	m	class:BenchMark
from_raw_to_dataset	utils/tools.py	/^def from_raw_to_dataset(dir_data, dataname):$/;"	f
get_inter_feature	data/data_pool.py	/^    def get_inter_feature(name):$/;"	f	function:get_output
get_label_dict	data/dataset.py	/^def get_label_dict(dir_data, dataname):$/;"	f
get_output	data/data_pool.py	/^def get_output(model, dataloader, device):$/;"	f
get_selected_idx	data/data_pool.py	/^def get_selected_idx(source_list, idx_list):$/;"	f
get_ts_list	data/dataset.py	/^def get_ts_list(dir_data, dataname, task, classes):$/;"	f
hook	data/data_pool.py	/^        def hook(model, input, output):$/;"	f	function:get_output.get_inter_feature
load_data	data/__init__.py	/^def load_data(data_dir, dataname, task, classes):$/;"	f
load_data_pool	data/data_pool.py	/^    def load_data_pool(self):$/;"	m	class:DataPool
load_dataloader	data/__init__.py	/^def load_dataloader(dataset, batch_size, num_workers, shuffle=True):$/;"	f
load_feature_mean	data/data_pool.py	/^    def load_feature_mean(self):$/;"	m	class:DataPool
load_model	models/representer.py	/^def load_model(model, num_classes, dir_model):$/;"	f
lr	config.py	/^    lr = 1e-3$/;"	v	class:Config
lr_schedule	config.py	/^    lr_schedule = True $/;"	v	class:Config
num_dims	config.py	/^    num_dims = 46$/;"	v	class:Config
num_epochs	config.py	/^    num_epochs = 100$/;"	v	class:Config
num_inc	config.py	/^    num_inc = 3$/;"	v	class:Config
num_workers	config.py	/^    num_workers = 4$/;"	v	class:Config
rawdataset	data/dataset.py	/^    rawdataset = RawDataset(dir_data, dataname, task, classes)$/;"	v
save_datapool_to_pkl	data/data_pool.py	/^    def save_datapool_to_pkl(self):$/;"	m	class:DataPool
save_model	models/representer.py	/^def save_model(model, dir_model):$/;"	f
task	data/dataset.py	/^    task = 'train'$/;"	v
total	data/dataset.py	/^    total = 0$/;"	v
train	main.py	/^def train(dataname, num_dims, num_inc=2, cap=1000, lr=0.001, name_log='default', num_epochs=60, batch_size=64, device='gpu', lr_schedule=False, optimizer='adam', dir_data='.\/', num_workers=4):$/;"	f
