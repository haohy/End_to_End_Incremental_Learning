!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BasicBlock	models/resnet.py	/^class BasicBlock(nn.Module):$/;"	c
Bottleneck	models/resnet.py	/^class Bottleneck(nn.Module):$/;"	c
Classifier	models/classifier.py	/^class Classifier(nn.Module):$/;"	c
Config	config.py	/^class Config():$/;"	c
DataPool	data/data_pool.py	/^class DataPool():$/;"	c
Dataset_Pool	data/dataset.py	/^class Dataset_Pool(data.Dataset):$/;"	c
RawDataset	data/dataset.py	/^class RawDataset(data.Dataset):$/;"	c
ResNet	models/resnet.py	/^class ResNet(nn.Module):$/;"	c
__all__	models/resnet.py	/^__all__ = ['ResNet', 'resnet18', 'resnet34', 'resnet50', 'resnet101',$/;"	v
__getitem__	data/dataset.py	/^    def __getitem__(self, index):$/;"	m	class:Dataset_Pool	file:
__getitem__	data/dataset.py	/^    def __getitem__(self, index):$/;"	m	class:RawDataset	file:
__init__	data/data_pool.py	/^    def __init__(self, cap, dir_pool=config.dir_pool):$/;"	m	class:DataPool
__init__	data/dataset.py	/^    def __init__(self, data_dir, data_type, task, classes):$/;"	m	class:RawDataset
__init__	data/dataset.py	/^    def __init__(self, data_pool):$/;"	m	class:Dataset_Pool
__init__	models/classifier.py	/^    def __init__(self, dim_input, num_classes):$/;"	m	class:Classifier
__init__	models/resnet.py	/^    def __init__(self, block, layers, num_classes=100, zero_init_residual=False, norm_layer=None):$/;"	m	class:ResNet
__init__	models/resnet.py	/^    def __init__(self, inplanes, planes, stride=1, downsample=None, norm_layer=None):$/;"	m	class:BasicBlock
__init__	models/resnet.py	/^    def __init__(self, inplanes, planes, stride=1, downsample=None, norm_layer=None):$/;"	m	class:Bottleneck
__len__	data/dataset.py	/^    def __len__(self):$/;"	m	class:Dataset_Pool	file:
__len__	data/dataset.py	/^    def __len__(self):$/;"	m	class:RawDataset	file:
_make_layer	models/resnet.py	/^    def _make_layer(self, block, planes, blocks, stride=1, norm_layer=None):$/;"	m	class:ResNet
acc_cal	models/representer.py	/^def acc_cal(model, test_dataloader):$/;"	f
add_data	data/data_pool.py	/^    def add_data(self, model, new_data, label_list, num_everyclass):$/;"	m	class:DataPool
batch_size	config.py	/^    batch_size = 256 $/;"	v	class:Config
cap	config.py	/^    cap = 10000$/;"	v	class:Config
concat_datasets	data/dataset.py	/^def concat_datasets(datasets_list):$/;"	f
config	config.py	/^config = Config()$/;"	v
conv1x1	models/resnet.py	/^def conv1x1(in_planes, out_planes, stride=1):$/;"	f
conv3x3	models/resnet.py	/^def conv3x3(in_planes, out_planes, stride=1):$/;"	f
data_shape	config.py	/^    data_shape = (1, 28, 28)$/;"	v	class:Config
data_type	config.py	/^    data_type = 'mnist'$/;"	v	class:Config
device	config.py	/^    device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')$/;"	v	class:Config
dir_data	config.py	/^    dir_data = "\/disk1\/haohy\/images\/mnist"$/;"	v	class:Config
dir_model	config.py	/^    dir_model = "\/disk1\/haohy\/models"$/;"	v	class:Config
dir_path	data/__init__.py	/^dir_path = os.path.dirname(os.path.realpath(__file__))$/;"	v
dir_path	models/__init__.py	/^dir_path = os.path.dirname(os.path.realpath(__file__))$/;"	v
dir_pool	config.py	/^    dir_pool = "\/disk1\/haohy\/data_pool"$/;"	v	class:Config
expansion	models/resnet.py	/^    expansion = 1$/;"	v	class:BasicBlock
expansion	models/resnet.py	/^    expansion = 4$/;"	v	class:Bottleneck
forward	models/classifier.py	/^    def forward(self, x):$/;"	m	class:Classifier
forward	models/resnet.py	/^    def forward(self, x):$/;"	m	class:BasicBlock
forward	models/resnet.py	/^    def forward(self, x):$/;"	m	class:Bottleneck
forward	models/resnet.py	/^    def forward(self, x):$/;"	m	class:ResNet
get_data_by_index	data/data_pool.py	/^def get_data_by_index(source_list, index_list):$/;"	f
get_inter_feature	data/data_pool.py	/^    def get_inter_feature(name):$/;"	f	function:get_output
get_output	data/data_pool.py	/^def get_output(model, dataloader):$/;"	f
hook	data/data_pool.py	/^        def hook(model, input, output):$/;"	f	function:get_output.get_inter_feature
label2vec	utils/tools.py	/^def label2vec(target, label_dict, output_dim):$/;"	f
label_list	main.py	/^    label_list = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']$/;"	v
load_data	data/__init__.py	/^def load_data(data_dir, data_type, task, classes):$/;"	f
load_data_pool	data/data_pool.py	/^    def load_data_pool(self):$/;"	m	class:DataPool
load_dataloader	data/__init__.py	/^def load_dataloader(dataset, batch_size, num_workers, shuffle=False):$/;"	f
load_feature_mean	data/data_pool.py	/^    def load_feature_mean(self):$/;"	m	class:DataPool
load_model	models/representer.py	/^def load_model(model, num_classes=0, dir_model=config.dir_model):$/;"	f
lr	config.py	/^    lr = 1e-3$/;"	v	class:Config
lr_schedule	config.py	/^    lr_schedule = False$/;"	v	class:Config
model_urls	models/resnet.py	/^model_urls = {$/;"	v
num_epochs	config.py	/^    num_epochs = 20$/;"	v	class:Config
num_inc	config.py	/^    num_inc = 2$/;"	v	class:Config
num_workers	config.py	/^    num_workers = 4$/;"	v	class:Config
resnet101	models/resnet.py	/^def resnet101(pretrained=False, **kwargs):$/;"	f
resnet152	models/resnet.py	/^def resnet152(pretrained=False, **kwargs):$/;"	f
resnet18	models/resnet.py	/^def resnet18(pretrained=False, **kwargs):$/;"	f
resnet34	models/resnet.py	/^def resnet34(pretrained=False, **kwargs):$/;"	f
resnet50	models/resnet.py	/^def resnet50(pretrained=False, **kwargs):$/;"	f
save_data_pool_file	data/data_pool.py	/^    def save_data_pool_file(self, path=config.dir_pool):$/;"	m	class:DataPool
save_model	models/representer.py	/^def save_model(model, dir_model=config.dir_model):$/;"	f
train	main.py	/^def train(dir_data, label_list, num_epochs, num_inc, lr, batch_size=64, device='gpu', lr_schedule=False, data_type='mnist', optimizer='adam', task='train', num_workers=4):$/;"	f
